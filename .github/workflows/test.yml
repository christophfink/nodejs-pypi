# vim: set tabstop=2 softtabstop=2 shiftwidth=2 expandtab:

name: Unit tests
on:
  pull_request:
  workflow_call:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    uses: ./.github/workflows/lint.yml
    secrets: inherit

  test-on-default-runners:
    name: Run tests (${{ matrix.os }}, Python ${{ matrix.python_version }})
    needs: lint
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: 
          - ubuntu-latest
          #- windows-latest
          #- macos-latest
        python_version:
          - '3.13'
          #- '3.12'
          #- '3.11'
          #- '3.10'
          #- '3.9'

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: actions/setup-python@v5
        with:
          python-version: '${{matrix.python_version}}'
          cache: 'pip'

      - run: pip install build

      - run: python -m build .

      - run: python -m pip install --prefer-binary .[tests]

      - run: python -m pytest

      - uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - uses: codecov/test-results-action@v1
        if: ${{ !cancelled() }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  test-on-alpine-runners:
    name: Run tests (alpine-${{ matrix.arch }})
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch:
          - x86_64
          - x86
          - aarch64

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: jirutka/setup-alpine@v1
        with:
          arch: ${{ matrix.arch }}
          packages: python3 py3-pip-tools

      - run: |
          python -m venv .virtualenv
          source .virtualenv/bin/activate
          python -m pip install .[tests]
        shell: alpine.sh {0}

      - run: python -m pytest
        shell: alpine.sh {0}

      - uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - uses: codecov/test-results-action@v1
        if: ${{ !cancelled() }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  # combine dependencies on multiple test-matrices into one proxy-job
  test:
    needs: [test-on-default-runners, test-on-alpine-runners]
    runs-on: ubuntu-latest
    steps:
      - run: echo "All tests have passed successfully"

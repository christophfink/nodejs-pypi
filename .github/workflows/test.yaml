name: Test
on:
  push:
    branches:
      - main
  pull_request: {}

concurrency: 
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-wheels:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          python-version: "3.13"
          cache: 'pip'
      - name: Install dependencies
        run: |
            pip install -r requirements.txt
      - name: Build Wheels
        run: |
          mkdir dist
          python make_wheels.py
      - name: Show built files
        run: |
            ls -l dist/*
      - uses: actions/upload-artifact@v4
        with:
            name: nodejs-pip-wheels
            path: dist/
            if-no-files-found: error
            retention-days: 1

  test-non-linux:
    name: "Test ${{ matrix.os }} Python:${{ matrix.python-version }} NodeJS:${{ matrix.nodejs-version }}"
    runs-on: ${{ matrix.os }}
    needs: [build-wheels]
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest]
        nodejs-version: ['20.19.5', '22.20.0', '24.9.0']
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']

    steps:
      - uses: actions/checkout@v5
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/download-artifact@v5
        with:
            name: nodejs-pip-wheels
            path: dist
      - name: Show available wheels
        run: |
          ls dist
      - name: Install Package (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
            WHEELS_TO_INSTALL=$(find dist -name "*${{matrix.nodejs-version}}*py3*manylinux*x86_64.whl")
            echo "WHEELS_TO_INSTALL=${WHEELS_TO_INSTALL}"
            pip install ${WHEELS_TO_INSTALL}
      - name: Install Package (Mac OS)
        if: matrix.os == 'macos-latest'
        run: |
            WHEELS_TO_INSTALL=$(find dist -name "*${{matrix.nodejs-version}}*py3*macosx*x86_64.whl")
            echo "WHEELS_TO_INSTALL=${WHEELS_TO_INSTALL}"
            pip install ${WHEELS_TO_INSTALL}
      - name: Install Package (Windows)
        if: matrix.os == 'windows-latest'
        run: |
            pip install dist\nodejs_bin-${{matrix.nodejs-version}}a3-py3-none-win_amd64.whl
      - name: Test Package
        run:
            python -W error -m nodejs --version
            python -W error -m nodejs.npm --version
            python -W error -m nodejs.npx --version
            python -W error -m nodejs.corepack --version

  test-linux:
    name: "Test Docker OS:${{ matrix.os-variant }} Python:${{ matrix.python-version }} NodeJS:${{ matrix.nodejs-version }}"
    runs-on: ubuntu-latest
    needs: [build-wheels]
    strategy:
      fail-fast: false
      matrix:
        os-variant: [alpine, slim-bookworm, slim-trixie]
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']
        nodejs-version: ['20.19.5', '22.20.0', '24.9.0']

    steps:
      - uses: actions/checkout@v5
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
      - uses: actions/download-artifact@v5
        with:
            name: nodejs-pip-wheels
            path: dist
      - name: Docker build
        run: |
          if [[ ${{ matrix.os-variant }} =~ "alpine" ]]; then
            WHEEL_TO_INSTALL=nodejs_bin-${{ matrix.nodejs-version }}a3-py3-none-musllinux_1_1_x86_64.whl
          else
            WHEEL_TO_INSTALL=nodejs_bin-${{ matrix.nodejs-version }}a3-py3-none-manylinux_2_12_x86_64.manylinux2010_x86_64.whl
          fi
          echo "WHEEL_TO_INSTALL=${WHEEL_TO_INSTALL}"
          docker build \
            -f Dockerfile \
            --build-arg PYTHON_VERSION=${{ matrix.python-version }} \
            --build-arg OS_VARIANT=${{ matrix.os-variant }} \
            --build-arg WHEEL_TO_INSTALL=${WHEEL_TO_INSTALL} \
            .
